# Generated by Django 4.2.3 on 2023-11-20 19:17

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Category',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50)),
            ],
        ),
        migrations.CreateModel(
            name='Comment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('text', models.TextField()),
                ('likes', models.PositiveIntegerField(default=0)),
                ('dislikes', models.PositiveIntegerField(default=0)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
            ],
        ),
        migrations.CreateModel(
            name='Goal',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('goal_no', models.PositiveIntegerField(blank=True, null=True)),
                ('name', models.CharField(max_length=50)),
                ('category', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='accounts.category')),
            ],
        ),
        migrations.CreateModel(
            name='Skills',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=500)),
            ],
        ),
        migrations.CreateModel(
            name='UserProfile',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('full_name', models.CharField(max_length=500)),
                ('email', models.EmailField(max_length=500, null=True)),
                ('gender', models.CharField(choices=[('Male', 'Male'), ('Female', 'Female'), ('Custom', 'Custom')], max_length=50)),
                ('profile_image', models.ImageField(blank=True, null=True, upload_to='profiles/')),
                ('location', models.CharField(blank=True, max_length=1000, null=True)),
                ('phone', models.CharField(blank=True, default='', max_length=300, null=True)),
                ('bio', models.TextField(blank=True, default='', null=True)),
                ('verification_token', models.UUIDField(default=uuid.uuid4, editable=False)),
                ('completed', models.BooleanField(default=False)),
                ('skillsets', models.ManyToManyField(blank=True, to='accounts.skills')),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='user_profile', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Reply',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('text', models.TextField()),
                ('likes', models.PositiveIntegerField(default=0)),
                ('dislikes', models.PositiveIntegerField(default=0)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('comment', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='accounts.comment')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Project',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=250)),
                ('description', models.TextField(null=True)),
                ('location', models.CharField(max_length=250)),
                ('no_of_people', models.IntegerField()),
                ('duration', models.CharField(blank=True, max_length=50, null=True)),
                ('start_date', models.DateTimeField()),
                ('publish', models.DateTimeField(default=django.utils.timezone.now)),
                ('payment_type', models.CharField(blank=True, choices=[('FIXED', 'Fixed'), ('VOLUNTEERING', 'Volunteering'), ('BIDDING', 'Bidding')], max_length=20)),
                ('amount', models.CharField(max_length=50)),
                ('category', models.ForeignKey(default=None, null=True, on_delete=django.db.models.deletion.CASCADE, to='accounts.category')),
                ('required_skills', models.ManyToManyField(blank=True, to='accounts.skills')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='user_projects', to=settings.AUTH_USER_MODEL)),
                ('usnd_goals', models.ForeignKey(default=None, null=True, on_delete=django.db.models.deletion.CASCADE, to='accounts.goal')),
            ],
            options={
                'ordering': ['-publish'],
            },
        ),
        migrations.CreateModel(
            name='Problem',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=250)),
                ('description', models.TextField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('category', models.CharField(blank=True, choices=[('COMMUNITY', 'Community'), ('ORGANISATION', 'Organisation'), ('ENVIRONMENT', 'Environment')], max_length=100, null=True)),
                ('img_one', models.ImageField(blank=True, null=True, upload_to='problem/image', verbose_name=['image1'])),
                ('img_two', models.ImageField(blank=True, null=True, upload_to='problem/image', verbose_name=['image2'])),
                ('img_three', models.ImageField(blank=True, null=True, upload_to='problem/image', verbose_name=['image3'])),
                ('location', models.CharField(blank=True, max_length=100, null=True)),
                ('likes', models.PositiveIntegerField(default=0)),
                ('dislikes', models.PositiveIntegerField(default=0)),
                ('shares', models.PositiveIntegerField(default=0)),
                ('user', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='user_problems', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='OrganisationProfile',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=500)),
                ('email', models.EmailField(max_length=500, null=True)),
                ('company_type', models.CharField(choices=[('Manufacturing', 'Manufacturing'), ('Telecom', 'Telecom'), ('Agriculture', 'Agriculture'), ('Fashion', 'Fashion')], max_length=200)),
                ('location', models.CharField(blank=True, max_length=1000, null=True)),
                ('image', models.ImageField(upload_to='profiles')),
                ('branch_office', models.CharField(blank=True, max_length=1000, null=True)),
                ('completed', models.BooleanField(default=False)),
                ('instagram', models.CharField(blank=True, default='', max_length=300)),
                ('twitter', models.CharField(blank=True, default='', max_length=300)),
                ('linkedin', models.CharField(blank=True, default='', max_length=300)),
                ('reg_number', models.CharField(blank=True, default='', max_length=300, null=True)),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='org_profile', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.AddField(
            model_name='comment',
            name='problem',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='accounts.problem'),
        ),
        migrations.AddField(
            model_name='comment',
            name='user',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL),
        ),
    ]
